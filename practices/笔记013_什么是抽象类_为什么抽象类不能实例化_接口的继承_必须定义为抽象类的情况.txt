1. 什么是抽象类 
        抽象方法是一种特殊的方法：它只有声明，而没有具体的实现。
        抽象方法的声明格式为：
                abstract void fun();
        抽象类和普通类的主要有三点区别
            1）抽象方法必须为public或者protected（因为如果为private，则不能被子类继承，子类便无法实现该方法），缺省情况下默认为public。

            2）抽象类不能用来创建对象；

            3）如果一个类继承于一个抽象类，则子类必须实现父类的抽象方法。如果子类没有实现父类的抽象方法，则必须将子类也定义为为abstract类。

2. 为什么抽象类不能实例化
        因为抽象类中含有无具体实现的方法，所以不能用抽象类创建对象。


3. 请用代码实践一次接口的继承 
        见附件


4. 现在已经知道implements了接口而没有实现接口中所有方法的类必须是abstract类.
    那么, 还有什么情况下, 必须定义为abstract类?
            有抽象方法的类必须被定义为abstract类


5.实践一次方法重写、实践一次方法重载
        (1)方法重载是一个类中定义了多个方法名相同,而他们的参数的数量不同或数量相同而类型和次序不同,则称为方法的重载(Overloading)。

        (2)方法重写是在子类存在方法与父类的方法的名字相同,而且参数的个数与类型一样,返回值也一样的方法,就称为重写(Overriding)。

        (3)方法重载是一个类的多态性表现,而方法重写是子类与父类的一种多态性表现。