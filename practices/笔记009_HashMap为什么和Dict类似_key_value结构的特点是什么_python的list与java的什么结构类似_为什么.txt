1. HashMap为什么和Dict类似

是基于哈希表结构实现的
使用键-值（key-value）存储，具有极快的查找速度



2. key:value结构的特点是什么

查找速度快

因为dict的实现原理和查字典是一样的。
假设字典包含了1万个汉字，我们要查某一个字，一个办法是把字典从第一页往后翻，直到找到我们想要的字为止，
这种方法就是在list中查找元素的方法，list越大，查找越慢。

第二种方法是先在字典的索引表里（比如部首表）查这个字对应的页码，然后直接翻到该页，找到这个字。
无论找哪个字，这种查找速度都非常快，不会随着字典大小的增加而变慢。
dict就是第二种实现方式



3. python的list和Java里的什么结构比较类似, 为什么

python的list：
        1、是一个有序集合
        2、通过下标来索引，读取数据list[i]
        3、支持嵌套
        4、是一个可变的类型list.append()

Java中的List集合：
        1、存取有序
        2、可以存储重复的元素
        3、可以用下标进行元素的操作：List[i]
        4、大小可动态扩展：List.add()
        5、可以存储各种类型的数据
        List<String> list = new ArrayList<String>();这样我们就声明并初始化了一个元素类型为String的集合

java中的数组：
        1、存储固定大小的同类型元素。
        2、通过下标来索引，读取数据list：d[i]
        double[]  d  =  new  double[100]，这样我们就声明并初始化了一个长度为100，名字为d的double型数组


数组与python中的list的区别：
        创建了一个数组之后，它的容量就固定了，而且在其生命周期里是不能改变的。
        而python中的list可通过list.append(obj) 在列表的末尾添加新的对象



